fit$factors
fit$structure
fit$Structure
fit$Structure[1]
fit$Structure[1,1]
fit$Structure[2]
fit$Structure["Proportion Var"]
fit$Structure["Proportion Var",]
fit$Structure[,"Proportion Var"]
fit$Structure[n-1]
fit$Structure[length(fit$Structure)]
fit$Structure[nobs(fit$Structure)]
fit$Structure[10]
fit$Structure[11]
fit$Structure[[1]]
fit$Structure[2][1]
names(fit$Structure)
unlist(fit$Structure)
as.data.frame(fit$Structure)
as.data.frame(fit$Structure[2])
as.data.frame(fit$Structure[[2]])
names(fit)
fit$values
print(fit, sort=TRUE)
scree(fit)
library(nFactors)
install.packages("nFactors")
library(nFactors)
ev <- eigen(cor(factor.vars[10:length(factor.vars)])) # get eigenvalues
fad<-factor.vars[10:length(factor.vars)]
fad<-factor.vars[10:length(factor.vars)]
ev <- eigen(cor(fad)) # get eigenvalues
ap <- parallel(subject=nrow(fad),var=ncol(fad),
rep=100,cent=.05)
nS <- nScree(x=ev$values, aparallel=ap$eigen$qevpea)
plotnScree(nS)
fit <- fa(factor.vars[fad, nfactors=2, rotate = "oblimin", fm = "ml")
load <- as.data.frame(fit$loadings[,1:2])
factor.plot<-ggplot(load, aes(x=ML2, y=ML1, label=rownames(load))) +
geom_text(size=4) +
theme_bw() +
labs(x="Factor 1 (Moral Statism)", y="Factor 2 (Government)")
factor.plot
plotnScree(nS)
scree.plot<-plotnScree(nS)
setwd("~/Dropbox/side_projects/misarchism")
require(arm)
require(ggplot2)
require(psych)
df<-read.csv("data/misarchism_data.csv")
###########
factor.vars<-subset(df)
factor.vars<-factor.vars[c("caseid", "tea_supp", "gender_respondent_x", "Auth",
"white", "dem_edu", "dem_age_r_x", "Obama", "inc_incgroup_pre", "libcpre_self",
"trad_famval", "gun_control",
"trad_tolerant", "trad_adjust", "wiretap",
"defsppr_self", "spsrvpr_ssself",
"immig_checks", "guarpr_self")]
# Rescale variables for FA
factor.vars[6:length(factor.vars)]<-as.data.frame(sapply(factor.vars[6:length(factor.vars)], function(x) rescale(x)))
factor.vars<-factor.vars[complete.cases(factor.vars),]
set.seed(666)
fad<-factor.vars[10:length(factor.vars)]
require(nFactors)
ev <- eigen(cor(fad)) # get eigenvalues
ap <- parallel(subject=nrow(fad),var=ncol(fad),
rep=100,cent=.05)
nS <- nScree(x=ev$values, aparallel=ap$eigen$qevpea)
scree.plot<-plotnScree(nS)
fit <- fa(factor.vars[fad, nfactors=2, rotate = "oblimin", fm = "ml")
fit <- fa(fad, nfactors=2, rotate = "oblimin", fm = "ml")
load <- as.data.frame(fit$loadings[,1:2])
factor.plot<-ggplot(load, aes(x=ML2, y=ML1, label=rownames(load))) +
geom_text(size=4) +
theme_bw() +
labs(x="Factor 1 (Moral Statism)", y="Factor 2 (Government)")
setwd("~/Dropbox/side_projects/misarchism")
require(arm)
require(ggplot2)
require(psych)
df<-read.csv("data/misarchism_data.csv")
###########
factor.vars<-subset(df)
factor.vars<-factor.vars[c("caseid", "tea_supp", "gender_respondent_x", "Auth",
"white", "dem_edu", "dem_age_r_x", "Obama", "inc_incgroup_pre", "libcpre_self",
"trad_famval", "gun_control",
"trad_tolerant", "trad_adjust", "wiretap",
"defsppr_self", "spsrvpr_ssself",
"immig_checks", "guarpr_self")]
# Rescale variables for FA
factor.vars[6:length(factor.vars)]<-as.data.frame(sapply(factor.vars[6:length(factor.vars)], function(x) rescale(x)))
factor.vars<-factor.vars[complete.cases(factor.vars),]
set.seed(666)
fad<-factor.vars[10:length(factor.vars)]
require(nFactors)
ev <- eigen(cor(fad)) # get eigenvalues
ap <- parallel(subject=nrow(fad),var=ncol(fad),
rep=100,cent=.05)
nS <- nScree(x=ev$values, aparallel=ap$eigen$qevpea)
scree.plot<-plotnScree(nS)
# Factor analysis on same variables as PCA, minus pcomp1
fit <- fa(fad, nfactors=2, rotate = "oblimin", fm = "ml")
# fit
# print(fit, sort=TRUE)
#fit <- factanal(factor.vars[7:length(factor.vars)], 3, rotation="varimax", scores="regression")
# print(fit, digits=2, cutoff=.3, sort=TRUE)
# summary(fit)
load <- as.data.frame(fit$loadings[,1:2])
factor.plot<-ggplot(load, aes(x=ML2, y=ML1, label=rownames(load))) +
geom_text(size=4) +
theme_bw() +
labs(x="Factor 1 (Moral Statism)", y="Factor 2 (Government)")
require(arm)
factor.vars$MoralStatism <- rescale(fit$scores[,1])
factor.vars$Government <- rescale(fit$scores[,2])
print(fit)
plot(fit)
factor.plot
require(Zelig)
# source("analyses/princ_comp.R")
model1<-glm(tea_supp ~ gender_respondent_x + inc_incgroup_pre + libcpre_self +
dem_age_r_x + white + dem_edu + Obama + Auth,
family=binomial,
data=factor.vars)
model1classif<-table(model1$result$fitted.values>.5, model1$result$y)
model1correct<-(model1classif[1,1] + model1classif[2,2])
model1classif
model1classif<-table(model1$fitted.values>.5, model1$y)
model1classif
model1correct<-(model1classif[1,1] + model1classif[2,2])
(model1correct/nrow(factor.vars))*100
model2<-glm(tea_supp ~ gender_respondent_x + inc_incgroup_pre + dem_age_r_x + white + dem_edu + Obama +
Auth + MoralStatism + Government + MoralStatism:Government,
family=binomial,
data=factor.vars)
model2classif<-table(model2$fitted.values>.5, model2$y)
model2correct<-(model2classif[1,1] + model2classif[2,2])
(model2correct/nrow(misarchism.vars))*100
(model2correct/nrow(factor.vars))*100
summary(model1)
summary(model2)
model2classif<-table(model2$result$fitted.values>.5, model2$result$y)
model2correct<-(model2classif[1,1] + model2classif[2,2])
model2<-glm(tea_supp ~ gender_respondent_x + inc_incgroup_pre + dem_age_r_x + white + dem_edu + Obama +
Auth + MoralStatism + Government + MoralStatism:Government,
family=binomial,
data=factor.vars)
model2classif<-table(model2$fitted.values>.5, model2$y)
model2correct<-(model2classif[1,1] + model2classif[2,2])
(model2correct/nrow(factor.vars))*100
model1classif<-table(model1$fitted.values>.5, model1$y)
model1correct<-(model1classif[1,1] + model1classif[2,2])
(model1correct/nrow(factor.vars))*100
?scale
require(arm)
?scale
?rescale
model1<-glm(tea_supp ~ gender_respondent_x + inc_incgroup_pre + libcpre_self +
dem_age_r_x + white + dem_edu,
family=binomial,
data=factor.vars)
summary(model1)
model1classif<-table(model1$fitted.values>.5, model1$y)
model1correct<-(model1classif[1,1] + model1classif[2,2])
(model1correct/nrow(factor.vars))*100
model1<-glm(tea_supp ~ gender_respondent_x + inc_incgroup_pre + libcpre_self +
dem_age_r_x + white + dem_edu + Obama + Auth,
family=binomial,
data=factor.vars)
model1<-glm(tea_supp ~ gender_respondent_x + inc_incgroup_pre + libcpre_self +
dem_age_r_x + white + dem_edu + Obama + Auth,
family=binomial,
data=factor.vars)
summary(model1)
summary(df$dem_raceeth_x)
setwd("~/Dropbox/side_projects/misarchism/data")
require(foreign)
require(memisc)
library(psych)
require(reshape2)
require(ggplot2)
df<-read.dta("anes_timeseries_2012_stata12.dta")
summary(df$inc_incgroup_pre)
df$inc_incgroup_pre[df$inc_incgroup_pre=="-9. refused"]<-NA
df$inc_incgroup_pre[df$inc_incgroup_pre=="-8. don''t know"]<-NA
df$inc_incgroup_pre[df$inc_incgroup_pre=="-2. missing; iwr mistakenly entered ''2'' in place of dk code for total income"]<-NA
df$inc_incgroup_pre<-factor(df$inc_incgroup_pre)
df$inc_incgroup_pre<-as.numeric(df$inc_incgroup_pre)
summary(df$aidblack_self) # aid to blacks
df$aidblack_self[df$aidblack_self<1]<-NA
df$aidblack_self <- 8-df$aidblack_self
summary(df$guarpr_self)   # guaranteed jobs
df$guarpr_self[df$guarpr_self<0]<-NA
df$guarpr_self <- 8-df$guarpr_self
summary(df$spsrvpr_ssself)   # spending on services
df$spsrvpr_ssself[df$spsrvpr_ssself<1]<-NA
summary(df$defsppr_self)   # defense spending
df$defsppr_self[df$defsppr_self<0]<-NA
summary(df$inspre_self)  # govt-private medical insur scale: self-plmt
df$inspre_self[df$inspre_self<1]<-NA
# df$inspre_self <- 8-df$inspre_self
df$gun_control[df$gun_control=="-9. refused"]<-NA
df$gun_control[df$gun_control=="-8. don''t know"]<-NA
df$gun_control<-recode(df$gun_control,
3<-"1. more difficult",
2<-"3. keep these rules about the same",
1<-"2. easier",
otherwise="copy")
df$gun_control<-as.numeric(levels(df$gun_control))[df$gun_control]
summary(df$trad_adjust)
df$trad_adjust[df$trad_adjust=="-9. refused"]<-NA
df$trad_adjust[df$trad_adjust=="-8. don''t know"]<-NA
df$trad_adjust[df$trad_adjust=="-7. deleted due to partial (post-election) interview"]<-NA
df$trad_adjust[df$trad_adjust=="-6. not asked, unit nonresponse (no post-election interview)"]<-NA
df$trad_adjust<-recode(df$trad_adjust,
1<-"1. agree strongly",
2<-"2. agree somewhat",
3<-"3. neither agree nor disagree",
4<-"4. disagree somewhat",
5<-"5. disagree strongly",
otherwise="copy")
df$trad_adjust<-as.numeric(levels(df$trad_adjust))[df$trad_adjust]
df$trad_lifestyle[df$trad_lifestyle=="-9. refused"]<-NA
df$trad_lifestyle[df$trad_lifestyle=="-8. don''t know"]<-NA
df$trad_lifestyle[df$trad_lifestyle=="-7. deleted due to partial (post-election) interview"]<-NA
df$trad_lifestyle[df$trad_lifestyle=="-6. not asked, unit nonresponse (no post-election interview)"]<-NA
df$trad_lifestyle<-recode(df$trad_lifestyle,
5<-"1. agree strongly",
4<-"2. agree somewhat",
3<-"3. neither agree nor disagree",
2<-"4. disagree somewhat",
1<-"5. disagree strongly",
otherwise="copy")
df$trad_lifestyle<-as.numeric(levels(df$trad_lifestyle))[df$trad_lifestyle]
summary(df$trad_tolerant)
df$trad_tolerant[df$trad_tolerant=="-9. refused"]<-NA
df$trad_tolerant[df$trad_tolerant=="-8. don''t know"]<-NA
df$trad_tolerant[df$trad_tolerant=="-7. deleted due to partial (post-election) interview"]<-NA
df$trad_tolerant[df$trad_tolerant=="-6. not asked, unit nonresponse (no post-election interview)"]<-NA
df$trad_tolerant<-recode(df$trad_tolerant,
1<-"1. agree strongly",
2<-"2. agree somewhat",
3<-"3. neither agree nor disagree",
4<-"4. disagree somewhat",
5<-"5. disagree strongly",
otherwise="copy")
df$trad_tolerant<-as.numeric(levels(df$trad_tolerant))[df$trad_tolerant]
summary(df$trad_famval)
df$trad_famval[df$trad_famval=="-9. refused"]<-NA
df$trad_famval[df$trad_famval=="-8. don''t know"]<-NA
df$trad_famval[df$trad_famval=="-7. deleted due to partial (post-election) interview"]<-NA
df$trad_famval[df$trad_famval=="-6. not asked, unit nonresponse (no post-election interview)"]<-NA
df$trad_famval<-recode(df$trad_famval,
5<-"1. agree strongly",
4<-"2. agree somewhat",
3<-"3. neither agree nor disagree",
2<-"4. disagree somewhat",
1<-"5. disagree strongly",
otherwise="copy")
df$trad_famval<-as.numeric(levels(df$trad_famval))[df$trad_famval]
df$libcpre_self[df$libcpre_self=="-9. refused"]<-NA
df$libcpre_self[df$libcpre_self=="-8. don''t know"]<-NA
df$libcpre_self[df$libcpre_self=="-2. haven''t thought much about this"]<-NA
df$libcpre_self<-recode(df$libcpre_self,
1<-"1. extremely liberal",
2<-"2. liberal",
3<-"3. slightly liberal",
4<-"4. moderate; middle of the road",
5<-"5. slightly conservative",
6<-"6. conservative",
7<-"7. extremely conservative",
otherwise="copy")
df$libcpre_self<-as.numeric(levels(df$libcpre_self))[df$libcpre_self]
summary(df$tea_supp)
df$tea_supp[df$tea_supp=="-9. refused"]<-NA
df$tea_supp[df$tea_supp=="-8. don''t know"]<-NA
df$tea_supp<-recode(df$tea_supp,
1<-"1. support",
0<-"3. neither support nor oppose",
0<-"2. oppose",
otherwise="copy")
df$tea_supp<-as.numeric(levels(df$tea_supp))[df$tea_supp]
df$dem_age_r_x[df$dem_age_r_x<18]<-NA
summary(df$dem_edu)
df$dem_edu[df$dem_edu=="-9. refused"]<-NA
df$dem_edu[df$dem_edu=="-8. don''t know"]<-NA
df$dem_edu[df$dem_edu=="95. other {specify}"]<-NA
df$dem_edu<-as.numeric(factor(df$dem_edu))
summary(df$immig_checks)
df$immig_checks[df$immig_checks=="-9. refused"]<-NA
df$immig_checks[df$immig_checks=="-8. don''t know"]<-NA
df$immig_checks<-recode(df$immig_checks,
3<-"1. favor",
2<-"3. neither favor or oppose",
1<-"2. oppose",
otherwise="copy")
df$immig_checks<-as.numeric(levels(df$immig_checks))[df$immig_checks]
summary(df$wiretappo_toofar)
df$wiretappo_toofar[df$wiretappo_toofar=="-9. refused"]<-NA
df$wiretappo_toofar[df$wiretappo_toofar=="-8. don''t know"]<-NA
df$wiretappo_toofar[df$wiretappo_toofar=="-7. deleted due to partial (post-election) interview"]<-NA
df$wiretappo_toofar[df$wiretappo_toofar=="-6. not asked, unit nonresponse (no post-election interview)"]<-NA
df$wiretap<-recode(df$wiretappo_toofar,
3<-"3. do not go far enough",
2<-"2. are just about right",
1<-"1. have gone too far",
otherwise="copy")
df$wiretap<-as.numeric(levels(df$wiretap))[df$wiretap]
summary(df$dem_raceeth_x)
summary(model1)
setwd("~/Dropbox/side_projects/misarchism/data")
require(foreign)
require(memisc)
library(psych)
require(reshape2)
require(ggplot2)
df<-read.dta("anes_timeseries_2012_stata12.dta")
setwd("~/Dropbox/side_projects/misarchism")
require(arm)
require(ggplot2)
df<-read.csv("data/misarchism_data.csv")
########### Run this analysis first
factor.vars<-subset(df)
factor.vars<-factor.vars[c("caseid", "tea_supp", "gender_respondent_x", "fox", "bornagain", "church",
"white", "Auth", "dem_edu", "dem_age_r_x", "Obama",
"republican",
"inc_incgroup_pre", "libcpre_self",
"trad_famval", "gun_control",
"trad_tolerant", "trad_adjust", "wiretap",
"defsppr_self", "spsrvpr_ssself",
"immig_checks", "guarpr_self")]
# Rescale variables for FA
factor.vars[8:length(factor.vars)]<-as.data.frame(sapply(factor.vars[8:length(factor.vars)], function(x) rescale(x)))
detach("package:arm", unload=TRUE)
require(psych)
set.seed(666)
# fad<-factor.vars[10:length(factor.vars)]
#
# ev <- eigen(cor(fad)) # get eigenvalues
# ap <- parallel(subject=nrow(fad),var=ncol(fad),
#                rep=100,cent=.05)
# nS <- nScree(x=ev$values, aparallel=ap$eigen$qevpea)
# scree.plot<-plotnScree(nS)
# Factor analysis on same variables as PCA, minus pcomp1
fit <- fa(factor.vars[14:length(factor.vars)], nfactors=2,
rotate = "oblimin", fm = "ml", warnings=FALSE,
missing=FALSE)
# fit
# print(fit, sort=TRUE)
#fit <- factanal(factor.vars[7:length(factor.vars)], 3, rotation="varimax", scores="regression")
# print(fit, digits=2, cutoff=.3, sort=TRUE)
# summary(fit)
load <- as.data.frame(fit$loadings[,1:2])
factor.plot<-ggplot(load, aes(x=ML2, y=ML1, label=rownames(load))) +
geom_text(size=4) +
theme_bw() +
labs(x="Factor 1 (Moral Statism)", y="Factor 2 (Government)")
# plot factor 1 by factor 2
detach("package:psych", unload=TRUE)
require(arm)
# factor.vars$factor1 <- rescale(max(fit$scores[,1])-fit$scores[,1]) # reverse to make it "conservatism"
factor.vars$MoralStatism <- rescale(fit$scores[,1])
factor.vars$Government <- rescale(fit$scores[,2])
detach("package:arm", unload=TRUE)
# Keep version with missing for imputation in 'missing.R'
factor.vars.miss<-factor.vars
# Remove missing for main regression models
factor.vars<-factor.vars[complete.cases(factor.vars),]
require(Zelig)
# source("analyses/princ_comp.R")
factor.vars$bornagain<-relevel(factor.vars$bornagain, ref="2. no")
factor.vars$church<-relevel(factor.vars$church, ref="2. no")
factor.vars$gender_respondent_x<-relevel(factor.vars$gender_respondent_x, ref="2. female")
model1<-glm(tea_supp ~ gender_respondent_x + inc_incgroup_pre + libcpre_self +
dem_age_r_x + white + dem_edu + Obama + Auth + bornagain +
church + republican + fox,
family=binomial,
data=factor.vars)
#  summary(model1)
# model1classif<-table(model1$fitted.values>.5, model1$y)
# model1correct<-(model1classif[1,1] + model1classif[2,2])
# (model1correct/nrow(factor.vars))*100
# misarchism.vars<-subset(df, select=c("tea_supp", "gender_respondent_x", "libcpre_self", "dem_age_r_x", "white", "dem_edu",
#                                      "trad_adjust", "trad_lifestyle", "defsppr_self", "spsrvpr_ssself","aidblack_self",
#                                       "immig_checks", "wiretap"))
# misarchism.vars<-misarchism.vars[complete.cases(misarchism.vars),]
model2<-glm(tea_supp ~ gender_respondent_x + inc_incgroup_pre + dem_age_r_x +
white + dem_edu + Obama + Auth + bornagain +
church + republican + fox + MoralStatism + Government + MoralStatism:Government,
family=binomial,
data=factor.vars)
# summary(model2)
# model2classif<-table(model2$fitted.values>.5, model2$y)
# model2correct<-(model2classif[1,1] + model2classif[2,2])
#  (model2correct/nrow(factor.vars))*100
model2.z<-zelig(tea_supp ~ gender_respondent_x + inc_incgroup_pre + dem_age_r_x +
white + dem_edu + Obama + Auth + bornagain +
church + republican + fox + MoralStatism + Government + MoralStatism:Government,
model="logit",
robust=FALSE,
data=factor.vars,
cite=F)
summary(model2.z)
model2.z.pid<-zelig(tea_supp ~ gender_respondent_x + inc_incgroup_pre + libcpre_self +
dem_age_r_x + white + dem_edu + Obama + Auth + bornagain +
church + republican + fox + MoralStatism + Government + MoralStatism:Government,
model="logit",
robust=FALSE,
data=factor.vars,
cite=F)
summary(model2.z.pid)
require(car)
vif(model2.z.pid)
model2.pid<-glm(tea_supp ~ gender_respondent_x + inc_incgroup_pre + libcpre_self + dem_age_r_x +
white + dem_edu + Obama + Auth + bornagain +
church + republican + fox + MoralStatism + Government + MoralStatism:Government,
family=binomial,
data=factor.vars)
summary(model2.pid)
vif(model2.pid)
vif(model2)
vif(model2.pid)
names(vif(model2.pid))
vif(model2.pid)$MoralStatism
vif(model2.pid)[13]
vif(model2.pid)[13,1]
round(vif(model2.pid)[13]),2)
round(vif(model2.pid)[13]),digits=2)
vif(model2.pid)[13]
round(vif(model2.pid)[13],digits=2)
summary(factor.vars$republican)
summary(df$pid_x)
setwd("~/Dropbox/side_projects/misarchism/data")
require(foreign)
require(memisc)
library(psych)
require(reshape2)
require(ggplot2)
df<-read.dta("anes_timeseries_2012_stata12.dta")
df$medsrc_tvprog_36[df$medsrc_tvprog_36=="-1. inapplicable"]<-NA #oreilly
df$medsrc_tvprog_37[df$medsrc_tvprog_37=="-1. inapplicable"]<-NA  #greta van susteren
df$medsrc_tvprog_41[df$medsrc_tvprog_41=="-1. inapplicable"]<-NA  # Bret Baier
df$medsrc_tvprog_25[df$medsrc_tvprog_25=="-1. inapplicable"]<-NA   # hannity
df$medsrc_tvprog_22[df$medsrc_tvprog_22=="-1. inapplicable"]<-NA  ##fox report
df$medsrc_tvprog_21[df$medsrc_tvprog_21=="-1. inapplicable"]<-NA  ##the five
df$medsrc_tvprog_07[df$medsrc_tvprog_07=="-1. inapplicable"]<-NA  #America's newsroom
df$fox<-as.factor(ifelse(df$medsrc_tvprog_36=="1. selected by r" |
df$medsrc_tvprog_37=="1. selected by r" |
df$medsrc_tvprog_41=="1. selected by r" |
df$medsrc_tvprog_25=="1. selected by r" |
df$medsrc_tvprog_22=="1. selected by r" |
df$medsrc_tvprog_21=="1. selected by r" |
df$medsrc_tvprog_07=="1. selected by r",
"Watches Fox", "Does not watch Fox"))
summary(df$relig_bornagn)
df$relig_bornagn[df$relig_bornagn=="-9. refused"]<-NA
df$relig_bornagn[df$relig_bornagn=="-8. don''t know"]<-NA
df$relig_bornagn[df$relig_bornagn=="-1. inapplicable"]<-NA
df$bornagain<-factor(df$relig_bornagn)
df$bornagain<-relevel(df$bornagain, ref="2. no")
summary(df$bornagain)
summary(df$relig_church)
df$relig_church[df$relig_church=="-9. refused"]<-NA
df$relig_church[df$relig_church=="-8. don''t know"]<-NA
df$church<-factor(df$relig_church)
df$church<-relevel(df$church, ref="2. no")
summary(df$church)
summary(df$pid_x)
df$pid_x[df$pid_x=="-2. missing"]<-NA
summary(df$pid_x)
factor(df$pid_x)
df$republican<-as.numeric(factor(df$pid_x))
summary(df$republican)
summary(df$pid_x)
model.republican<-lm(republican ~ gender_respondent_x + inc_incgroup_pre + dem_age_r_x +
white + dem_edu + Obama + Auth + bornagain +
church + fox + MoralStatism + Government + MoralStatism:Government,
data=factor.vars)
summary(model.republican)
model.republican<-lm(republican ~ gender_respondent_x + inc_incgroup_pre + dem_age_r_x +
white + dem_edu + Obama + Auth + bornagain +
church + fox + MoralStatism + Government + MoralStatism:Government + tea_supp,
data=factor.vars)
summary(model.republican)
model.republican<-lm(republican ~ gender_respondent_x + inc_incgroup_pre + dem_age_r_x +
white + dem_edu + Obama + Auth + bornagain +
church + fox + MoralStatism + Government + MoralStatism:Government,
data=factor.vars)
summary(model.republican)
model.conservative<-lm(libcpre_self ~ gender_respondent_x + inc_incgroup_pre + dem_age_r_x +
white + dem_edu + Obama + Auth + bornagain +
church + republican + fox + MoralStatism + Government + MoralStatism:Government,
data=factor.vars)
summary(model.conservative)
summary(model2.z)
summary(model.conservative)
model.republican<-lm(republican ~ gender_respondent_x + inc_incgroup_pre + dem_age_r_x +
white + dem_edu + Obama + Auth + bornagain +
church + fox + MoralStatism + Government + MoralStatism:Government,
data=factor.vars)
summary(model.republican)
model.conservative<-lm(libcpre_self ~ gender_respondent_x + inc_incgroup_pre + dem_age_r_x +
white + dem_edu + Obama + Auth + bornagain +
church + republican + fox + MoralStatism + Government + MoralStatism:Government,
data=factor.vars)
summary(model.conservative)
summary(model.conservative)
require(stargazer)
?stargazer
stargazer(model.republican, model.conservative,
dep.var.labels=c("Republican", "Conservatism"),
header=FALSE, font.size="footnotesize", no.space=TRUE)
